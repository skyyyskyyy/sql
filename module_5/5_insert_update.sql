USE education_task_nk
GO

/****************************************************************************
************************   Task One   ***************************************
*****************************************************************************
****************************************************************************/

--1.	Збільшити на 10 рейтинг всіх поставщиків, рейтинг котрих в даний момент 
--менше ніж рейтинг поставщика 4

UPDATE [suppliers]
	SET rating = rating + 10
	WHERE rating < (SELECT rating FROM [suppliers] WHERE supplierid = 4)
GO

/****************************************************************************
************************   Task Two   ***************************************
*****************************************************************************
****************************************************************************/


--2.	Побудувати таблицю, в котрій занесено список номерів виробів, 
--котрі або знаходяться в Лондоні, або для них поставляються деталі яким не-будь поставщиком з Лондону

SELECT
	DISTINCT ([products].[productid])
    ,[products].[name]
	INTO #London_pr
	FROM [products]  	
	INNER JOIN supplies ON products.productid = supplies.productid
	INNER JOIN details ON supplies.detailid = details.detailid
	WHERE [products].[city] = 'London' OR [details].[city] = 'London'
	ORDER BY [productid]
GO       

SELECT * FROM #London_pr
GO

/****************************************************************************
************************   Task Three   ***************************************
*****************************************************************************
****************************************************************************/

--3.	Видалити всі вироби, для котрих нема поставок деталей

--INSERT INTO Products (productid, name, city, categoryid)
--VALUES (8, 'Scanner', 'Paris',4);


DELETE FROM products
	WHERE productid IN (SELECT
	[products].[productid]
	FROM [products]
	FULL OUTER JOIN supplies ON products.productid = supplies.productid
	WHERE products.productid IS NULL OR supplies.productid IS NULL
	)
GO

/****************************************************************************
************************   Task Four   ***************************************
*****************************************************************************
****************************************************************************/

--4.	Створити таблицю з номерами поставщиків і парами номерів деталей, таких, що кожен з поставщиків поставляє обидві вказані деталі


--I could'nt handle with this task to group only suppliers who supply
--two details, I've made all details
SELECT supplierid, detailid = 
    STUFF((SELECT DISTINCT ', ' + convert(varchar (20), detailid)
           FROM supplies b 
           WHERE b.supplierid = a.supplierid 
		   FOR XML PATH('')), 1, 2, '')
FROM supplies a
GROUP BY supplierid




/****************************************************************************
************************   Task Five   ***************************************
*****************************************************************************
****************************************************************************/

--5.	Збільшити розмір поставки на 10 відсотків для всіх поставок тих поставщиків, котрі поставляють яку-небудь Червону деталь

UPDATE [supplies]
	SET quantity = quantity + ((quantity/100)*10)
	FROM supplies
	inner join details on supplies.detailid = details.detailid
	WHERE details.color = 'red'
GO

/****************************************************************************
************************   Task Six   ***************************************
*****************************************************************************
****************************************************************************/

--6.	Створити таблицю  з комбінаціями «колір деталі - місто де зберігається деталь» з видаленням дублікатів

SELECT
	DISTINCT([details].[color])
    ,[details].[city]
	INTO #detail_pairs
	FROM [details]  	

GO       

SELECT * FROM #detail_pairs
GO


/****************************************************************************
************************   Task Seven   ***************************************
*****************************************************************************
****************************************************************************/


--7.	Занести в новостворену таблицю список номерів деталей, котрі поставляються 
--будь-яким поставщиком з Лондону чи для будь-якого виробу з Лондону

SELECT
	DISTINCT([supplies].[detailid])
	INTO #London_dt
	FROM [supplies]  	
	INNER JOIN suppliers ON suppliers.supplierid = supplies.supplierid
	INNER JOIN products ON supplies.productid = products.productid
	WHERE [suppliers].[city] = 'London' OR [products].[city] = 'London'
GO       

SELECT * FROM #London_dt
GO

/****************************************************************************
************************   Task Eight   ***************************************
*****************************************************************************
****************************************************************************/

--8.	Вставити в таблицю поставщиків поставщика з кодом 10, прізвищем Уайт, з міста Нью-Йорк з невідомим рейтингом 

INSERT INTO Suppliers (supplierid, name, rating, city) 
VALUES (10, 'White',   NULL,  'NY');

/****************************************************************************
************************   Task Nine   ***************************************
*****************************************************************************
****************************************************************************/

--9.	Видалити всі вироби з Риму і всі відповідні поставки

DELETE 	
	FROM supplies 
	WHERE productid in (
		SELECT
		[supplies].[productid]
		FROM supplies
		inner join products on products.productid = supplies.productid
		WHERE city = 'Roma'
		UNION all
		SELECT productid
		FROM products
		WHERE city = 'Roma')

GO


/****************************************************************************
************************   Task Ten   ***************************************
*****************************************************************************
****************************************************************************/

--10.	Створити таблицю з впорядкованим списком всіх міст в яких є
-- по крайній мірі один поставщик, одна деталь чи виріб.

SELECT
	[details].[city]
	INTO #sities
	FROM
	details
	UNION
	SELECT
	[products].[city]
	FROM
	[products]
	UNION
	SELECT
	[suppliers].[city]
	FROM
	[suppliers]
	ORDER BY [city]
GO       

SELECT * FROM #sities
GO


/****************************************************************************
************************   Task Eleven   ***************************************
*****************************************************************************
****************************************************************************/

--11. Змінити колір червоних деталей з вагою менше 15 фунтів на жовтий.

UPDATE [details]
	SET color = 'yellow'
	FROM details
	WHERE color = 'red' and weight < 15
GO

/****************************************************************************
************************   Task Twelve  ***************************************
*****************************************************************************
****************************************************************************/

--12.	Створити таблицю з номерами виробів і назвами міст, де вони виготовляються. Додаткова умова – друга буква назва міста є »о»


SELECT
	[products].[city]
	,[products].[name]
	INTO #city_and_products
	FROM
	products
	WHERE city like '_o%'
	
GO       

SELECT * FROM #city_and_products
GO

/****************************************************************************
************************   Task Thirteen  ***************************************
*****************************************************************************
****************************************************************************/

--	13.	Збільшити на 10 рейтинг тих поставщиків, об’єм поставок котрих вище середнього

UPDATE [suppliers]
	SET rating = rating + 10
	FROM suppliers
	WHERE supplierid in (SELECT 
	supplies.supplierid
	FROM supplies
	GROUP BY supplierid
	HAVING avg(quantity) > (SELECT avg(quantity) FROM supplies))
GO



/****************************************************************************
************************   Task Fourteen  ***************************************
*****************************************************************************
****************************************************************************/

--	14.	Створити таблицю з впорядкованими списками номерів і прізвищами поставщиків, котрі поставляють деталі для виробу 1.

SELECT
	[suppliers].[supplierid]
	,[suppliers].[name]
	INTO #product_1_suppliers
	FROM
	suppliers
	WHERE supplierid in (SELECT supplierid FROM supplies WHERE productid = 1)	
GO       

SELECT * FROM #product_1_suppliers
GO


/****************************************************************************
************************   Task Fifteen  ***************************************
*****************************************************************************
****************************************************************************/

--	15.	Вставити в таблицю двох різних поставщиків одною командою.


INSERT INTO Suppliers (supplierid, name, rating, city) 
VALUES (8, 'Lionel',   30,  'Barcelona')
,(9, 'Cristiano',   40,  'Madrid')
GO
